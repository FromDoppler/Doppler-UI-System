{
  "name": "doppler-ui",
  "title": "Doppler UI Library",
  "private": true,
  "version": "0.1.1",
  "description": "UI library for easy inclusion css, components, images and fonts in projects",
  "homepage": "https://fromdoppler.com",
  "keywords": [
    "ui",
    "ui library"
  ],
  "author": "Doppler UI Team",
  "contributors": [
    {
      "name": "Ignacio Rodrigues",
      "email": "irodrigues@fromdoppler.com"
    },
    {
      "name": "Mariana Massimino",
      "email": "mmassimino@fromdoppler.com"
    }
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/FromDoppler/Doppler-UI-System"
  },
  "browserslist": [
    "last 2 versions",
    "> 1%",
    "last 3 iOS versions",
    "Firefox > 20",
    "ie 9"
  ],
  "webfont": {
    "files": "./assets/icons/*.svg",
    "fontName": "icon-font",
    "templateClassName": "icon",
    "templateFontPath": "../fonts/",
    "template": "./assets/scss/libs/webfont/template.css"
  },
  "scripts": {
    "build": "cross-env-shell ENV=\"dev\" JS=\"main.js --source-map url='main.js.map',includeSources\" SASSMAP=\"--source-map true --source-map-contents true\" MINIFYMAP=\"--source-map --source-map-inline-sources\" OMAP=\"--source-map inline\" npm-run-all del makedir-css makedir-js build-p",
    "build-p": "run-p font-compile css-compile-all imagemin html js-minify js-copy-push sassdoc",
    "build-n-serve": "npm-run-all build serve",
    "copyfiles": "npx cpy",
    "css-compile": "npm-run-all css-compile-sass-styles css-prefix-styles css-minify-styles csso-styles",
    "css-compile-all": "npm-run-all css-compile css-compile-editor css-compile-dark csso-dark",
    "css-compile-dark": "npm-run-all css-compile-sass-dark css-prefix-dark css-minify-dark csso-editor",
    "css-compile-editor": "npm-run-all css-compile-sass-editor css-prefix-editor css-minify-editor",
    "css-compile-sass": "cross-env-shell node-sass $SASSMAP --importer node_modules/node-sass-magic-importer/dist/cli.js --output ./$ENV/css",
    "css-compile-sass-dark": "npm run css-compile-sass -- ./assets/scss/themes/theme-dark/theme-dark.scss",
    "css-compile-sass-editor": "npm run css-compile-sass -- ./assets/scss/themes/editors/editors.scss",
    "css-compile-sass-styles": "npm run css-compile-sass -- ./assets/scss/styles.scss",
    "css-minify": "cross-env-shell cleancss $MINIFYMAP -o",
    "css-minify-dark": "cross-env-shell npm run css-minify -- ./$ENV/css/theme-dark.css ./$ENV/css/theme-dark.css",
    "css-minify-editor": "cross-env-shell npm run css-minify -- ./$ENV/css/editors.css ./$ENV/css/editors.css",
    "css-minify-styles": "cross-env-shell npm run css-minify -- ./$ENV/css/styles.css ./$ENV/css/styles.css",
    "css-prefix": "postcss --use autoprefixer --use postcss-flexibility -r",
    "css-prefix-dark": "cross-env-shell npm run css-prefix -- ./$ENV/css/theme-dark.css",
    "css-prefix-editor": "cross-env-shell npm run css-prefix -- ./$ENV/css/editors.css",
    "css-prefix-styles": "cross-env-shell npm run css-prefix -- ./$ENV/css/styles.css",
    "csso-styles": "cross-env-shell npx csso ./$ENV/css/styles.css --output ./$ENV/css/styles.css $OMAP",
    "csso-dark": "cross-env-shell npx csso ./$ENV/css/theme-dark.css --output ./$ENV/css/theme-dark.css $OMAP",
    "csso-editor": "cross-env-shell npx csso ./$ENV/css/editors.css --output ./$ENV/css/editors.css $OMAP",
    "del": "cross-env-shell del-cli ./$ENV",
    "dist": "cross-env-shell ENV=\"dist\" JS=\"app.js\" npm-run-all font-compile makedir-css css-compile-all imagemin html makedir-js js-minify js-copy-push sassdoc",
    "eclint-check": "npx eclint check \"**/*\"",
    "font": "npm run makedir-font && webfont './assets/icons/*.svg' -d './assets/fonts' -s './assets/scss/libs/webfont/compiled' --font-height 1001 --normalize true",
    "font-compile": "npm-run-all font font-copy",
    "font-copy": "cross-env-shell npm run copyfiles ./assets/fonts/*.* ./$ENV/fonts",
    "html": "cross-env-shell node ./assets/process-html.js $ENV",
    "html-processor": "npx htmlprocessor",
    "imagemin": "cross-env-shell npx imagemin ./assets/img/* --out-dir ./$ENV/img",
    "js-copy-push": "cross-env-shell npm run copyfiles ./assets/firebasePush.js ./assets/firebase-messaging-sw.js ./$ENV",
    "js-minify": "cross-env-shell uglifyjs ./assets/js/*.js --compress --mangle -o $ENV/js/$JS",
    "makedir-css": "cross-env-shell make-dir ./$ENV/css",
    "makedir-font": "make-dir ./assets/scss/libs/webfont/compiled",
    "makedir-js": "cross-env-shell make-dir ./$ENV/js",
    "prettier": "prettier \"assets/**/*.{css,scss,html}\" \"!assets/scss/libs/**/*.{css,scss}\" --write",
    "prettier-check": "prettier-check \"assets/**/*.{css,scss,html}\" \"!assets/scss/libs/**/*.{css,scss}\"",
    "sassdoc": "cross-env-shell sassdoc ./assets/scss/**/*.* -d ./$ENV/documentation",
    "semantic-release": "semantic-release",
    "serve": "npx browser-sync start --server 'dev' -w --files 'dev' --port 3500",
    "watch": "run-p build-n-serve watch-all",
    "watch-all": "cross-env-shell ENV=\"dev\" JS=\"main.js --source-map url='main.js.map',includeSources\" run-p watch-js watch-img watch-font watch-sass watch-html",
    "watch-font": "onchange -k -v \"assets/icons/*.*\" -- cross-env-shell npm run font-compile",
    "watch-html": "onchange -k -v \"assets/templates/*.*\" -- cross-env-shell npm run html",
    "watch-img": "onchange -k -v \"assets/img/*.*\" -- cross-env-shell npm run imagemin",
    "watch-js": "onchange -k -v \"assets/js/*.js\" \"assets/*.js\" -- npm run js-minify && cross-env-shell npm run js-copy-push",
    "watch-sass": "onchange -k -v \"assets/scss/**/*.scss\" -- cross-env-shell npm run css-compile-all",
    "webfont": "node node_modules/webfont/dist/cli.js"
  },
  "prettier": {
    "semi": true,
    "singleQuote": true,
    "trailingComma": "all",
    "arrowParens": "always"
  },
  "devDependencies": {
    "@semantic-release/exec": "^5.0.0",
    "autoprefixer": "^10.4.2",
    "browser-sync": "^2.27.7",
    "clean-css-cli": "^5.5.2",
    "cpy": "^8.1.2",
    "cpy-cli": "^3.1.1",
    "cross-env": "^7.0.3",
    "css-mqpacker": "~7.0.0",
    "csso-cli": "^3.0.0",
    "del": "^6.0.0",
    "del-cli": "^4.0.1",
    "eclint": "^2.8.1",
    "express": "^4.17.2",
    "htmlprocessor": "^0.3.1",
    "imagemin-cli": "^6.0.0",
    "make-dir-cli": "^2.0.0",
    "node-sass": "^7.0.1",
    "node-sass-glob-importer": "^5.3.2",
    "node-sass-magic-importer": "^5.3.2",
    "npm-run-all": "^4.1.5",
    "onchange": "^7.1.0",
    "postcss": "^8.4.6",
    "postcss-clean": "~1.2.2",
    "postcss-cli": "^9.1.0",
    "postcss-flexibility": "^2.0.0",
    "prettier": "^2.4.1",
    "prettier-check": "^2.0.0",
    "sassdoc": "^2.7.3",
    "semantic-release": "^17.4.7",
    "sort-css-media-queries": "^2.0.4",
    "ttf2woff2": "^4.0.2",
    "uglify-js": "^3.15.0",
    "web-push": "^3.4.5",
    "webfont": "^11.2.26"
  },
  "main": "pdr",
  "engines": {
    "node": ">=12.16.3",
    "npm": ">=6.14.4"
  },
  "dependencies": {},
  "release": {
    "branch": "master",
    "dryRun": false,
    "noCi": true,
    "debug": true,
    "plugins": [
      "@semantic-release/commit-analyzer",
      "@semantic-release/release-notes-generator",
      "@semantic-release/github"
    ],
    "verifyConditions": [
      "@semantic-release/github"
    ],
    "analyzeCommits": [
      "@semantic-release/commit-analyzer"
    ],
    "generateNotes": [
      "@semantic-release/release-notes-generator"
    ],
    "prepare": [
      {
        "path": "@semantic-release/exec",
        "__comment": "Running compile-prod here allow us to inject release version if need.",
        "cmd": "echo ${nextRelease.version} > dist/version.txt && export pkgVersion=v${nextRelease.version} && npm run dist"
      }
    ],
    "publish": [
      {
        "path": "@semantic-release/github"
      }
    ],
    "success": [
      "@semantic-release/github"
    ],
    "fail": [
      "@semantic-release/github"
    ]
  }
}
